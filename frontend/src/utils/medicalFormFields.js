/**
 * Field configurations for medical forms
 * Defines the structure and validation for each medical form type
 */

// Allergy Form Field Configuration
export const allergyFormFields = [
  {
    name: 'allergen',
    type: 'text',
    label: 'Allergen',
    placeholder: 'e.g., Penicillin, Peanuts, Latex',
    required: true,
    description: 'What substance causes the allergic reaction',
    gridColumn: 6,
  },
  {
    name: 'severity',
    type: 'select',
    label: 'Severity',
    placeholder: 'Select severity level',
    required: true,
    description: 'How severe is this allergy',
    gridColumn: 6,
    options: [
      {
        value: 'mild',
        label: '💛 Mild - Minor discomfort',
      },
      {
        value: 'moderate',
        label: '⚡ Moderate - Noticeable symptoms',
      },
      {
        value: 'severe',
        label: '⚠️ Severe - Significant reaction',
      },
      {
        value: 'life-threatening',
        label: '🚨 Life-threatening - Anaphylaxis risk',
      },
    ],
  },
  {
    name: 'reaction',
    type: 'text',
    label: 'Reaction',
    placeholder: 'e.g., Rash, Anaphylaxis, Swelling',
    description: 'What happens when exposed to this allergen',
    gridColumn: 6,
  },
  {
    name: 'onset_date',
    type: 'date',
    label: 'Onset Date',
    placeholder: 'When did this allergy first occur',
    description: 'When this allergy was first discovered',
    gridColumn: 6,
    maxDate: () => new Date(), // Can't be in the future

  },
  {
    name: 'medication_id',
    type: 'select',
    label: 'Related Medication (Optional)',
    placeholder: 'Select a medication this allergy is related to',
    description: 'Link this allergy to a specific medication if applicable',
    gridColumn: 12,
    searchable: true,
    clearable: true,
    dynamicOptions: 'medications', // Will be populated from props
  },
  {
    name: 'status',
    type: 'select',
    label: 'Status',
    description: 'Current status of this allergy',
    gridColumn: 12,
    options: [
      { value: 'active', label: 'Active - Currently allergic' },
      { value: 'inactive', label: 'Inactive - No longer allergic' },
      { value: 'resolved', label: 'Resolved - Outgrown the allergy' },
    ],
  },
  {
    name: 'notes',
    type: 'textarea',
    label: 'Notes',
    placeholder: 'Additional information about this allergy...',
    description: 'Any additional details, triggers, or treatment notes',
    gridColumn: 12,
    minRows: 3,
    maxRows: 6,
  },
];

// Export field configurations for other forms (to be added later)
export const conditionFormFields = [
  {
    name: 'diagnosis',
    type: 'text',
    label: 'Diagnosis',
    placeholder: 'e.g., Hypertension, Diabetes Type 2, Asthma',
    required: true,
    description: 'Medical condition or diagnosis name',
    gridColumn: 12,
  },
  {
    name: 'status',
    type: 'select',
    label: 'Status',
    description: 'Current status of this condition',
    gridColumn: 6,
    dynamicOptions: 'conditionStatus',
  },
  {
    name: 'severity',
    type: 'select',
    label: 'Severity',
    placeholder: 'Select severity level',
    description: 'Severity level of this condition',
    gridColumn: 6,
    clearable: true,
    dynamicOptions: 'severity',
  },
  {
    name: 'onset_date',
    type: 'date',
    label: 'Onset Date',
    placeholder: 'When did this condition start',
    description: 'When this condition was first diagnosed',
    gridColumn: 6,

    maxDate: () => new Date(),

  },
  {
    name: 'end_date',
    type: 'date',
    label: 'End Date',
    placeholder: 'When was this condition resolved',
    description: 'When this condition was resolved (optional)',
    gridColumn: 6,
    maxDate: () => new Date(),

  },
  {
    name: 'icd10_code',
    type: 'text',
    label: 'ICD-10 Code',
    placeholder: 'e.g., I10, E11.9',
    description: 'International Classification of Diseases code',
    gridColumn: 4,
    maxLength: 10,
  },
  {
    name: 'snomed_code',
    type: 'text',
    label: 'SNOMED Code',
    placeholder: 'e.g., 38341003',
    description: 'SNOMED CT clinical terminology code',
    gridColumn: 4,
    maxLength: 20,
  },
  {
    name: 'code_description',
    type: 'text',
    label: 'Code Description',
    placeholder: 'Description of the medical code',
    description: 'Human-readable description of the code',
    gridColumn: 4,
    maxLength: 500,
  },
  {
    name: 'notes',
    type: 'textarea',
    label: 'Notes',
    placeholder: 'Additional information about this condition...',
    description: 'Treatment notes, symptoms, or other relevant details',
    gridColumn: 12,
    minRows: 4,
    maxRows: 8,
  },
];

export const medicationFormFields = [
  {
    name: 'medication_name',
    type: 'text',
    label: 'Medication Name',
    placeholder: 'e.g., Lisinopril, Metformin',
    required: true,
    description: 'Generic or brand name of the medication',
    gridColumn: 6,
  },
  {
    name: 'dosage',
    type: 'text',
    label: 'Dosage',
    placeholder: 'e.g., 10mg, 1 tablet',
    description: 'Strength and amount per dose',
    gridColumn: 6,
  },
  {
    name: 'frequency',
    type: 'text',
    label: 'Frequency',
    placeholder: 'e.g., Once daily, Twice daily',
    description: 'How often the medication is taken',
    gridColumn: 6,
  },
  {
    name: 'route',
    type: 'select',
    label: 'Route',
    placeholder: 'Select Route',
    description: 'How the medication is administered',
    gridColumn: 6,
    searchable: true,
    clearable: true,
    options: [
      { value: 'oral', label: 'Oral' },
      { value: 'injection', label: 'Injection' },
      { value: 'topical', label: 'Topical' },
      { value: 'intravenous', label: 'Intravenous' },
      { value: 'intramuscular', label: 'Intramuscular' },
      { value: 'subcutaneous', label: 'Subcutaneous' },
      { value: 'inhalation', label: 'Inhalation' },
      { value: 'nasal', label: 'Nasal' },
      { value: 'rectal', label: 'Rectal' },
      { value: 'sublingual', label: 'Sublingual' },
    ],
  },
  {
    name: 'indication',
    type: 'text',
    label: 'Indication',
    placeholder: 'e.g., High blood pressure, As needed for pain, Diabetes management',
    description: 'What is this medication for? Describe the reason or condition being treated',
    gridColumn: 12,
  },
  {
    name: 'status',
    type: 'select',
    label: 'Status',
    description: 'Current status of the medication',
    gridColumn: 4,
    options: [
      { value: 'active', label: 'Active' },
      { value: 'stopped', label: 'Stopped' },
      { value: 'on-hold', label: 'On Hold' },
      { value: 'completed', label: 'Completed' },
    ],
  },
  {
    name: 'effective_period_start',
    type: 'date',
    label: 'Start Date',
    placeholder: 'Select start date',
    description: 'When the medication was started',
    gridColumn: 4,
  },
  {
    name: 'effective_period_end',
    type: 'date',
    label: 'End Date',
    placeholder: 'Select end date',
    description: 'When discontinued (if applicable)',
    gridColumn: 4,
  },
  {
    name: 'practitioner_id',
    type: 'select',
    label: 'Prescribing Provider',
    placeholder: 'Select Provider',
    description: 'Doctor who prescribed this medication',
    gridColumn: 6,
    searchable: true,
    clearable: true,
    dynamicOptions: 'practitioners',
  },
  {
    name: 'pharmacy_id',
    type: 'select',
    label: 'Pharmacy',
    placeholder: 'Select Pharmacy',
    description: 'Pharmacy where medication is filled',
    gridColumn: 6,
    searchable: true,
    clearable: true,
    dynamicOptions: 'pharmacies',
  },
];

// Lab Result Form Field Configuration
export const labResultFormFields = [
  {
    name: 'test_name',
    type: 'text',
    label: 'Test Name',
    placeholder: 'e.g., Complete Blood Count (CBC)',
    required: true,
    description: 'Name or description of the laboratory test',
    gridColumn: 8,
  },
  {
    name: 'test_code',
    type: 'text',
    label: 'Test Code',
    placeholder: 'e.g., CBC, 85025',
    description: 'Lab code or LOINC',
    gridColumn: 4,
  },
  {
    name: 'test_category',
    type: 'select',
    label: 'Test Category',
    placeholder: 'Select category',
    description: 'Type of laboratory test',
    gridColumn: 6,
    searchable: true,
    clearable: true,
    dynamicOptions: 'categories',
  },
  {
    name: 'test_type',
    type: 'select',
    label: 'Test Type',
    placeholder: 'Select urgency level',
    description: 'Priority or urgency of the test',
    gridColumn: 6,
    clearable: true,
    dynamicOptions: 'testTypes',
  },
  {
    name: 'facility',
    type: 'text',
    label: 'Testing Facility',
    placeholder: 'e.g., Main Hospital Laboratory',
    description: 'Where the test is/was performed',
    gridColumn: 6,
  },
  {
    name: 'practitioner_id',
    type: 'select',
    label: 'Ordering Practitioner',
    placeholder: 'Select practitioner',
    description: 'Doctor who ordered the test',
    gridColumn: 6,
    searchable: true,
    clearable: true,
    dynamicOptions: 'practitioners',
  },
  {
    name: 'status',
    type: 'select',
    label: 'Test Status',
    placeholder: 'Select status',
    description: 'Current status of the lab test',
    gridColumn: 6,
    dynamicOptions: 'statuses',
  },
  {
    name: 'labs_result',
    type: 'select',
    label: 'Lab Result',
    placeholder: 'Select result (if available)',
    description: 'Test result classification',
    gridColumn: 6,
    clearable: true,
    dynamicOptions: 'results',
  },
  {
    name: 'ordered_date',
    type: 'date',
    label: 'Ordered Date',
    placeholder: 'When test was ordered',
    description: 'Date the test was requested',
    gridColumn: 6,
  },
  {
    name: 'completed_date',
    type: 'date',
    label: 'Completed Date',
    placeholder: 'When results were available',
    description: 'Date the results were finalized',
    gridColumn: 6,
  },
  {
    name: 'notes',
    type: 'textarea',
    label: 'Additional Notes',
    placeholder: 'Any additional information about the test, special instructions, or observations...',
    description: 'Clinical notes or special instructions',
    gridColumn: 12,
    minRows: 3,
    maxRows: 6,
  },
];

// Immunization Form Field Configuration
export const immunizationFormFields = [
  {
    name: 'vaccine_name',
    type: 'text',
    label: 'Vaccine Name',
    placeholder: 'e.g., COVID-19 mRNA, Influenza, MMR',
    required: true,
    description: 'Name of the administered vaccine',
    gridColumn: 12,
  },
  {
    name: 'date_administered',
    type: 'date',
    label: 'Date Administered',
    placeholder: 'Select administration date',
    required: true,
    description: 'When the vaccine was given',
    gridColumn: 8,
  },
  {
    name: 'dose_number',
    type: 'number',
    label: 'Dose Number',
    placeholder: '1, 2, 3...',
    description: 'Which dose in series',
    gridColumn: 4,
    min: 1,
    max: 10,
  },
  {
    name: 'lot_number',
    type: 'text',
    label: 'Lot Number',
    placeholder: 'Vaccine batch/lot number',
    description: 'Batch identifier for tracking',
    gridColumn: 6,
  },
  {
    name: 'manufacturer',
    type: 'select',
    label: 'Manufacturer',
    placeholder: 'Select manufacturer',
    description: 'Vaccine manufacturer',
    gridColumn: 6,
    searchable: true,
    clearable: true,
    dynamicOptions: 'manufacturers',
  },
  {
    name: 'site',
    type: 'select',
    label: 'Injection Site',
    placeholder: 'Select injection site',
    description: 'Location where vaccine was given',
    gridColumn: 6,
    clearable: true,
    dynamicOptions: 'sites',
  },
  {
    name: 'route',
    type: 'select',
    label: 'Administration Route',
    placeholder: 'Select route',
    description: 'Method of administration',
    gridColumn: 6,
    clearable: true,
    dynamicOptions: 'routes',
  },
  {
    name: 'expiration_date',
    type: 'date',
    label: 'Vaccine Expiration Date',
    placeholder: 'Select expiration date',
    description: 'Expiration date of the vaccine vial/dose used',
    gridColumn: 12,
  },
  {
    name: 'notes',
    type: 'textarea',
    label: 'Additional Notes',
    placeholder: 'Any reactions, side effects, or additional observations...',
    description: 'Record any adverse reactions or important notes',
    gridColumn: 12,
    minRows: 3,
    maxRows: 6,
  },
];

// Procedure Form Field Configuration
export const procedureFormFields = [
  {
    name: 'procedure_name',
    type: 'text',
    label: 'Procedure Name',
    placeholder: 'e.g., Appendectomy, MRI Scan, Colonoscopy',
    required: true,
    description: 'Name of the medical procedure',
    gridColumn: 8,
  },
  {
    name: 'procedure_type',
    type: 'select',
    label: 'Procedure Type',
    placeholder: 'Select type',
    description: 'Category of procedure',
    gridColumn: 4,
    clearable: true,
    options: [
      {
        value: 'surgical',
        label: 'Surgical - Invasive procedure',
      },
      {
        value: 'diagnostic',
        label: 'Diagnostic - Testing/Imaging',
      },
      { value: 'therapeutic', label: 'Therapeutic - Treatment' },
      {
        value: 'preventive',
        label: 'Preventive - Prevention care',
      },
      { value: 'emergency', label: 'Emergency - Urgent care' },
    ],
  },
  {
    name: 'procedure_code',
    type: 'text',
    label: 'Procedure Code',
    placeholder: 'e.g., CPT-12345, ICD-10-PCS',
    description: 'Medical coding (CPT, ICD-10-PCS, etc.)',
    gridColumn: 6,
  },
  {
    name: 'procedure_setting',
    type: 'select',
    label: 'Procedure Setting',
    placeholder: 'Select setting',
    description: 'Where the procedure takes place',
    gridColumn: 6,
    clearable: true,
    options: [
      {
        value: 'outpatient',
        label: 'Outpatient - Same day discharge',
      },
      {
        value: 'inpatient',
        label: 'Inpatient - Hospital stay required',
      },
      {
        value: 'office',
        label: 'Office - Doctor office/clinic',
      },
      {
        value: 'emergency',
        label: 'Emergency - ER/urgent care',
      },
      {
        value: 'home',
        label: 'Home - At patient home',
      },
    ],
  },
  {
    name: 'description',
    type: 'textarea',
    label: 'Description',
    placeholder: 'Detailed description of the procedure...',
    description: 'Detailed description of what the procedure involves',
    gridColumn: 12,
    minRows: 3,
    maxRows: 5,
  },
  {
    name: 'procedure_date',
    type: 'date',
    label: 'Procedure Date',
    placeholder: 'Select procedure date',
    required: true,
    description: 'When the procedure is/was performed',
    gridColumn: 4,
  },
  {
    name: 'status',
    type: 'select',
    label: 'Status',
    description: 'Current status of the procedure',
    gridColumn: 4,
    dynamicOptions: 'statuses',
  },
  {
    name: 'procedure_duration',
    type: 'number',
    label: 'Duration (minutes)',
    placeholder: 'e.g., 30, 120',
    description: 'How long the procedure took/will take',
    gridColumn: 4,
    min: 1,
  },
  {
    name: 'facility',
    type: 'text',
    label: 'Facility',
    placeholder: 'e.g., General Hospital, Outpatient Clinic',
    description: 'Where the procedure is/was performed',
    gridColumn: 6,
  },
  {
    name: 'practitioner_id',
    type: 'select',
    label: 'Performing Practitioner',
    placeholder: 'Select practitioner',
    description: 'Doctor performing the procedure',
    gridColumn: 6,
    clearable: true,
    searchable: true,
    dynamicOptions: 'practitioners',
  },
  {
    name: 'procedure_complications',
    type: 'textarea',
    label: 'Complications',
    placeholder: 'Any complications that occurred during the procedure...',
    description: 'Document any complications, adverse events, or unexpected outcomes',
    gridColumn: 12,
    minRows: 2,
    maxRows: 4,
  },
  {
    name: 'notes',
    type: 'textarea',
    label: 'Clinical Notes',
    placeholder: 'Additional notes about the procedure...',
    description: 'Any additional clinical notes or observations',
    gridColumn: 12,
    minRows: 3,
    maxRows: 6,
  },
  {
    name: 'anesthesia_type',
    type: 'select',
    label: 'Anesthesia Type',
    placeholder: 'Select anesthesia type',
    description: 'Type of anesthesia used',
    gridColumn: 6,
    clearable: true,
    options: [
      {
        value: 'general',
        label: 'General - Complete unconsciousness',
      },
      { value: 'local', label: 'Local - Numbing specific area' },
      {
        value: 'regional',
        label: 'Regional - Numbing larger area',
      },
      {
        value: 'sedation',
        label: 'Sedation - Relaxed but conscious',
      },
      { value: 'none', label: 'None - No anesthesia required' },
    ],
  },
  {
    name: 'anesthesia_notes',
    type: 'text',
    label: 'Anesthesia Notes',
    placeholder: 'Anesthesia-related notes...',
    description: 'Any notes about anesthesia administration',
    gridColumn: 6,
  },
];

// Practitioner Form Field Configuration  
export const practitionerFormFields = [
  {
    name: 'name',
    type: 'text',
    label: 'Full Name',
    placeholder: 'Dr. Jane Smith',
    required: true,
    description: "Doctor's full name including title",
    gridColumn: 12,
  },
  {
    name: 'specialty',
    type: 'select',
    label: 'Medical Specialty',
    placeholder: 'Select specialty',
    description: 'Primary area of medical practice',
    required: true,
    gridColumn: 6,
    searchable: true,
    maxDropdownHeight: 300,
    dynamicOptions: 'specialties',
  },
  {
    name: 'practice',
    type: 'text',
    label: 'Practice/Hospital',
    placeholder: 'City General Hospital',
    required: true,
    description: 'Workplace or medical facility',
    gridColumn: 6,
  },
  {
    name: 'phone_number',
    type: 'text',
    label: 'Phone Number',
    placeholder: '(555) 123-4567',
    description: 'Primary contact number',
    gridColumn: 6,
    maxLength: 14,
  },
  {
    name: 'website',
    type: 'text',
    label: 'Website',
    placeholder: 'https://www.example.com',
    description: 'Professional website or practice page',
    gridColumn: 6,
  },
  {
    name: 'rating',
    type: 'rating',
    label: 'Rating',
    description: 'Rate this practitioner\'s overall care quality',
    gridColumn: 12,
  },
];

// Emergency Contact Form Field Configuration
export const emergencyContactFormFields = [
  {
    name: 'name',
    type: 'text',
    label: 'Full Name',
    placeholder: 'e.g., John Smith',
    required: true,
    description: 'Full name of the emergency contact',
    gridColumn: 7,
  },
  {
    name: 'relationship',
    type: 'select',
    label: 'Relationship',
    placeholder: 'Select relationship',
    description: 'Relationship to patient',
    required: true,
    gridColumn: 5,
    dynamicOptions: 'relationships',
  },
  {
    name: 'phone_number',
    type: 'text',
    label: 'Primary Phone',
    placeholder: 'e.g., (555) 123-4567',
    required: true,
    description: 'Primary phone number',
    gridColumn: 6,
  },
  {
    name: 'secondary_phone',
    type: 'text',
    label: 'Secondary Phone',
    placeholder: 'e.g., (555) 987-6543',
    description: 'Optional secondary phone number',
    gridColumn: 6,
  },
  {
    name: 'email',
    type: 'email',
    label: 'Email Address',
    placeholder: 'e.g., john.smith@email.com',
    description: 'Optional email address',
    gridColumn: 12,
  },
  {
    name: 'address',
    type: 'text',
    label: 'Address',
    placeholder: 'e.g., 123 Main St, City, State 12345',
    description: "Contact's address (optional)",
    gridColumn: 12,
  },
  {
    name: 'is_primary',
    type: 'checkbox',
    label: 'Primary Emergency Contact',
    description: 'This person will be contacted first in emergencies',
    gridColumn: 6,
  },
  {
    name: 'is_active',
    type: 'checkbox',
    label: 'Active Contact',
    description: 'This contact is currently available',
    gridColumn: 6,
  },
  {
    name: 'notes',
    type: 'textarea',
    label: 'Notes',
    placeholder: 'Additional information (e.g., \'Available weekdays only\', \'Speaks Spanish\')',
    description: 'Any additional notes about this contact',
    gridColumn: 12,
    minRows: 3,
    maxRows: 6,
  },
];

// Visit Form Field Configuration
export const visitFormFields = [
  {
    name: 'reason',
    type: 'text',
    label: 'Reason for Visit',
    placeholder: 'e.g., Annual Checkup, Follow-up, Symptoms Review',
    required: true,
    description: 'Primary purpose of this medical visit',
    gridColumn: 12,
  },
  {
    name: 'date',
    type: 'date',
    label: 'Visit Date',
    placeholder: 'Select visit date',
    required: true,
    description: 'When the visit occurred',
    gridColumn: 6,
    maxDate: () => new Date(),

  },
  {
    name: 'practitioner_id',
    type: 'select',
    label: 'Attending Practitioner',
    placeholder: 'Select practitioner (optional)',
    description: 'Doctor who conducted the visit',
    gridColumn: 6,
    searchable: true,
    clearable: true,
    dynamicOptions: 'practitioners',
  },
  {
    name: 'visit_type',
    type: 'select',
    label: 'Visit Type',
    placeholder: 'Select visit type',
    description: 'Type of medical visit',
    gridColumn: 6,
    searchable: true,
    clearable: true,
    options: [
      { value: 'annual checkup', label: 'Annual Checkup' },
      { value: 'follow-up', label: 'Follow-up' },
      { value: 'consultation', label: 'Consultation' },
      { value: 'emergency', label: 'Emergency' },
      { value: 'preventive care', label: 'Preventive Care' },
      { value: 'routine visit', label: 'Routine Visit' },
      { value: 'specialist referral', label: 'Specialist Referral' },
    ],
  },
  {
    name: 'priority',
    type: 'select',
    label: 'Priority',
    placeholder: 'Select priority level',
    description: 'Priority level of the visit',
    gridColumn: 6,
    clearable: true,
    options: [
      { value: 'routine', label: 'Routine' },
      { value: 'urgent', label: 'Urgent' },
      { value: 'emergency', label: 'Emergency' },
    ],
  },
  {
    name: 'condition_id',
    type: 'select',
    label: 'Related Condition (Optional)',
    placeholder: 'Select a condition this visit is related to',
    description: 'Link this visit to a specific condition if applicable',
    gridColumn: 12,
    searchable: true,
    clearable: true,
    dynamicOptions: 'conditions',
  },
  {
    name: 'chief_complaint',
    type: 'text',
    label: 'Chief Complaint',
    placeholder: 'Primary concern or symptom reported',
    description: 'Main health concern or symptom that prompted the visit',
    gridColumn: 12,
  },
  {
    name: 'duration_minutes',
    type: 'number',
    label: 'Duration (minutes)',
    placeholder: 'Visit duration',
    description: 'How long the visit lasted',
    gridColumn: 6,
    min: 1,
    max: 600,
  },
  {
    name: 'location',
    type: 'select',
    label: 'Location',
    placeholder: 'Where the visit occurred',
    description: 'Where the visit took place',
    gridColumn: 6,
    searchable: true,
    clearable: true,
    options: [
      { value: 'office', label: "Doctor's Office" },
      { value: 'hospital', label: 'Hospital' },
      { value: 'clinic', label: 'Clinic' },
      { value: 'telehealth', label: 'Telehealth/Virtual' },
      { value: 'urgent care', label: 'Urgent Care' },
      { value: 'emergency room', label: 'Emergency Room' },
      { value: 'home', label: 'Home Visit' },
    ],
  },
  {
    name: '_divider_clinical',
    type: 'divider',
    label: 'Clinical Information',
    gridColumn: 12,
  },
  {
    name: 'diagnosis',
    type: 'textarea',
    label: 'Diagnosis/Assessment',
    placeholder: 'Clinical assessment or diagnosis from the visit...',
    description: 'Medical diagnosis or clinical assessment',
    gridColumn: 12,
    minRows: 2,
    maxRows: 4,
  },
  {
    name: 'treatment_plan',
    type: 'textarea',
    label: 'Treatment Plan',
    placeholder: 'Recommended treatment or next steps...',
    description: 'Treatment recommendations and prescribed interventions',
    gridColumn: 12,
    minRows: 3,
    maxRows: 6,
  },
  {
    name: 'follow_up_instructions',
    type: 'textarea',
    label: 'Follow-up Instructions',
    placeholder: 'Follow-up care instructions...',
    description: 'Instructions for ongoing care and follow-up appointments',
    gridColumn: 12,
    minRows: 2,
    maxRows: 4,
  },
  {
    name: 'notes',
    type: 'textarea',
    label: 'Additional Notes',
    placeholder: 'Any other important details about the visit...',
    description: 'Any additional observations, notes, or important details',
    gridColumn: 12,
    minRows: 3,
    maxRows: 6,
  },
];

// Pharmacy Form Field Configuration
export const pharmacyFormFields = [
  {
    name: 'brand',
    type: 'select',
    label: 'Pharmacy Brand',
    placeholder: 'Select pharmacy chain or type',
    description: 'Major pharmacy chain or independent type',
    gridColumn: 12,
    searchable: true,
    clearable: true,
    options: [
      { value: 'Amazon Pharmacy', label: 'Amazon Pharmacy' },
      { value: 'CVS', label: 'CVS Pharmacy' },
      { value: 'Walgreens', label: 'Walgreens' },
      { value: 'Rite Aid', label: 'Rite Aid' },
      { value: 'Walmart Pharmacy', label: 'Walmart Pharmacy' },
      { value: 'Target Pharmacy', label: 'Target Pharmacy' },
      { value: 'Costco Pharmacy', label: 'Costco Pharmacy' },
      { value: 'Kroger Pharmacy', label: 'Kroger Pharmacy' },
      { value: 'Safeway Pharmacy', label: 'Safeway Pharmacy' },
      { value: 'Publix Pharmacy', label: 'Publix Pharmacy' },
      { value: 'Meijer Pharmacy', label: 'Meijer Pharmacy' },
      { value: 'H-E-B Pharmacy', label: 'H-E-B Pharmacy' },
      { value: 'Kaiser Permanente', label: 'Kaiser Permanente' },
      { value: 'Hospital Pharmacy', label: 'Hospital Pharmacy' },
      { value: 'Independent', label: 'Independent Pharmacy' },
      { value: 'Specialty Pharmacy', label: 'Specialty Pharmacy' },
      { value: 'Compounding Pharmacy', label: 'Compounding Pharmacy' },
      { value: 'Online Pharmacy', label: 'Online Pharmacy' },
      { value: 'Other', label: 'Other' },
    ],
  },
  {
    name: 'name',
    type: 'text',
    label: 'Pharmacy Name',
    placeholder: 'CVS Pharmacy - Main Street',
    required: true,
    description: 'Specific name or location identifier',
    gridColumn: 12,
  },
  {
    name: '_divider_location',
    type: 'divider',
    label: 'Location Information',
    gridColumn: 12,
  },
  {
    name: 'street_address',
    type: 'text',
    label: 'Street Address',
    placeholder: '123 Main Street',
    description: 'Physical street address',
    gridColumn: 8,
  },
  {
    name: 'city',
    type: 'text',
    label: 'City',
    placeholder: 'San Francisco',
    description: 'City location',
    gridColumn: 4,
  },
  {
    name: 'store_number',
    type: 'text',
    label: 'Store Number',
    placeholder: 'e.g., 1234, #5678, Store A',
    description: 'Internal store identifier',
    gridColumn: 6,
    maxLength: 20,
  },
  {
    name: 'phone_number',
    type: 'text',
    label: 'Phone Number',
    placeholder: '(555) 123-4567',
    description: 'Primary pharmacy phone number',
    gridColumn: 6,
    maxLength: 14,
  },
  {
    name: 'website',
    type: 'text',
    label: 'Website',
    placeholder: 'https://www.pharmacy-website.com',
    description: 'Pharmacy website or online services',
    gridColumn: 12,
  },
];

// Treatment Form Field Configuration
export const treatmentFormFields = [
  {
    name: 'treatment_name',
    type: 'text',
    label: 'Treatment Name',
    placeholder: 'e.g., Physical Therapy for Lower Back Pain',
    required: true,
    description: 'Specific name or description of the treatment',
    gridColumn: 7,
  },
  {
    name: 'treatment_type',
    type: 'select',
    label: 'Treatment Type',
    placeholder: 'Select type',
    description: 'Category of treatment',
    required: true,
    gridColumn: 5,
    searchable: true,
    options: [
      { value: 'Surgery', label: 'Surgery - Surgical procedure' },
      { value: 'Medication', label: 'Medication - Drug therapy' },
      { value: 'Physical Therapy', label: 'Physical Therapy - Rehabilitation' },
      { value: 'Chemotherapy', label: 'Chemotherapy - Cancer treatment' },
      { value: 'Radiation', label: 'Radiation - Radiation therapy' },
      { value: 'Immunotherapy', label: 'Immunotherapy - Immune system treatment' },
      { value: 'Occupational Therapy', label: 'Occupational Therapy - Functional improvement' },
      { value: 'Speech Therapy', label: 'Speech Therapy - Communication improvement' },
      { value: 'Behavioral Therapy', label: 'Behavioral Therapy - Mental health treatment' },
      { value: 'Dialysis', label: 'Dialysis - Kidney function support' },
      { value: 'Other', label: 'Other - Specify in description' },
    ],
  },
  {
    name: 'condition_id',
    type: 'select',
    label: 'Related Condition',
    placeholder: 'Select condition (optional)',
    description: 'Link this treatment to a specific medical condition',
    gridColumn: 6,
    searchable: true,
    clearable: true,
    dynamicOptions: 'conditions',
  },
  {
    name: 'practitioner_id',
    type: 'select',
    label: 'Practitioner',
    placeholder: 'Select practitioner (optional)',
    description: 'Assign a practitioner to this treatment',
    gridColumn: 6,
    searchable: true,
    clearable: true,
    dynamicOptions: 'practitioners',
  },
  {
    name: 'status',
    type: 'select',
    label: 'Treatment Status',
    placeholder: 'Select status',
    description: 'Current stage in treatment workflow',
    gridColumn: 12,
    options: [
      { value: 'planned', label: 'Planned - Treatment scheduled for future' },
      { value: 'active', label: 'Active - Currently undergoing treatment' },
      { value: 'on-hold', label: 'On Hold - Temporarily paused' },
      { value: 'completed', label: 'Completed - Treatment finished successfully' },
      { value: 'cancelled', label: 'Cancelled - Treatment discontinued' },
    ],
  },
  {
    name: 'start_date',
    type: 'date',
    label: 'Start Date',
    placeholder: 'Select start date',
    required: true,
    description: 'When treatment begins/began',
    gridColumn: 6,
  },
  {
    name: 'end_date',
    type: 'date',
    label: 'End Date',
    placeholder: 'Select end date (if known)',
    description: 'Expected or actual completion date',
    gridColumn: 6,
  },
  {
    name: 'dosage',
    type: 'text',
    label: 'Amount',
    placeholder: 'e.g., 500mg, 2 tablets, 30 minutes',
    description: 'Amount or intensity per session',
    gridColumn: 6,
  },
  {
    name: 'frequency',
    type: 'select',
    label: 'Frequency',
    placeholder: 'Select frequency',
    description: 'How often treatment occurs',
    gridColumn: 6,
    searchable: true,
    clearable: true,
    options: [
      { value: 'Once daily', label: 'Once daily' },
      { value: 'Twice daily', label: 'Twice daily (BID)' },
      { value: 'Three times daily', label: 'Three times daily (TID)' },
      { value: 'Four times daily', label: 'Four times daily (QID)' },
      { value: 'Weekly', label: 'Weekly' },
      { value: 'Bi-weekly', label: 'Bi-weekly (every 2 weeks)' },
      { value: 'Monthly', label: 'Monthly' },
      { value: 'As needed', label: 'As needed (PRN)' },
      { value: 'One time', label: 'One time only' },
      { value: 'Continuous', label: 'Continuous/ongoing' },
    ],
  },
  {
    name: 'description',
    type: 'textarea',
    label: 'Treatment Description',
    placeholder: 'Detailed description of the treatment plan...',
    description: 'Comprehensive details about the treatment approach',
    gridColumn: 12,
    minRows: 3,
    maxRows: 5,
  },
  {
    name: 'notes',
    type: 'textarea',
    label: 'Additional Notes',
    placeholder: 'Progress notes, side effects, adjustments, outcomes...',
    description: 'Progress updates, observations, or important notes',
    gridColumn: 12,
    minRows: 3,
    maxRows: 6,
  },
];

// Utility function to get field configuration by form type
export const getFormFields = (formType) => {
  const fieldConfigs = {
    allergy: allergyFormFields,
    condition: conditionFormFields,
    medication: medicationFormFields,
    labResult: labResultFormFields,
    immunization: immunizationFormFields,
    procedure: procedureFormFields,
    practitioner: practitionerFormFields,
    emergencyContact: emergencyContactFormFields,
    visit: visitFormFields,
    pharmacy: pharmacyFormFields,
    treatment: treatmentFormFields,
  };
  
  return fieldConfigs[formType] || [];
};