"""add symptom and symptom_occurrence tables for two level hierarchy

Revision ID: 8df261bb269f
Revises: ab2bf7522852
Create Date: 2025-10-11 11:04:41.968433

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8df261bb269f'
down_revision = 'ab2bf7522852'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('symptoms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('symptom_name', sa.String(length=200), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('is_chronic', sa.Boolean(), nullable=False),
    sa.Column('first_occurrence_date', sa.Date(), nullable=False),
    sa.Column('last_occurrence_date', sa.Date(), nullable=True),
    sa.Column('typical_triggers', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('general_notes', sa.Text(), nullable=True),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_symptoms_is_chronic', 'symptoms', ['is_chronic'], unique=False)
    op.create_index('idx_symptoms_patient_id', 'symptoms', ['patient_id'], unique=False)
    op.create_index('idx_symptoms_patient_name', 'symptoms', ['patient_id', 'symptom_name'], unique=False)
    op.create_index('idx_symptoms_status', 'symptoms', ['status'], unique=False)
    op.create_table('symptom_occurrences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symptom_id', sa.Integer(), nullable=False),
    sa.Column('occurrence_date', sa.Date(), nullable=False),
    sa.Column('severity', sa.String(length=50), nullable=False),
    sa.Column('pain_scale', sa.Integer(), nullable=True),
    sa.Column('duration', sa.String(length=100), nullable=True),
    sa.Column('time_of_day', sa.String(length=50), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('triggers', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('relief_methods', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('associated_symptoms', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('impact_level', sa.String(length=50), nullable=True),
    sa.Column('resolved_date', sa.Date(), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['symptom_id'], ['symptoms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_symptom_occ_date', 'symptom_occurrences', ['occurrence_date'], unique=False)
    op.create_index('idx_symptom_occ_severity', 'symptom_occurrences', ['severity'], unique=False)
    op.create_index('idx_symptom_occ_symptom_date', 'symptom_occurrences', ['symptom_id', 'occurrence_date'], unique=False)
    op.create_index('idx_symptom_occ_symptom_id', 'symptom_occurrences', ['symptom_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_symptom_occ_symptom_id', table_name='symptom_occurrences')
    op.drop_index('idx_symptom_occ_symptom_date', table_name='symptom_occurrences')
    op.drop_index('idx_symptom_occ_severity', table_name='symptom_occurrences')
    op.drop_index('idx_symptom_occ_date', table_name='symptom_occurrences')
    op.drop_table('symptom_occurrences')
    op.drop_index('idx_symptoms_status', table_name='symptoms')
    op.drop_index('idx_symptoms_patient_name', table_name='symptoms')
    op.drop_index('idx_symptoms_patient_id', table_name='symptoms')
    op.drop_index('idx_symptoms_is_chronic', table_name='symptoms')
    op.drop_table('symptoms')
    # ### end Alembic commands ###
