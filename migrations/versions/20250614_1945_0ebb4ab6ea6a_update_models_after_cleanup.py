"""Update models after cleanup

Revision ID: 0ebb4ab6ea6a
Revises: sequence_maintenance_001
Create Date: 2025-06-14 19:45:58.999844

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "0ebb4ab6ea6a"
down_revision = "sequence_maintenance_001"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Handle conditions table: rename 'name' to 'condition_name'
    op.add_column("conditions", sa.Column("condition_name", sa.String(), nullable=True))
    # Copy data from name to condition_name
    op.execute("UPDATE conditions SET condition_name = name WHERE name IS NOT NULL")
    op.drop_column("conditions", "name")

    # Add new columns to lab_results
    op.add_column("lab_results", sa.Column("test_type", sa.String(), nullable=True))
    op.add_column("lab_results", sa.Column("facility", sa.String(), nullable=True))

    # Handle procedures table: rename 'name' to 'procedure_name'
    # First add the column as nullable
    op.add_column("procedures", sa.Column("procedure_name", sa.String(), nullable=True))
    # Copy data from name to procedure_name
    op.execute("UPDATE procedures SET procedure_name = name WHERE name IS NOT NULL")
    # Set default value for any remaining nulls
    op.execute(
        "UPDATE procedures SET procedure_name = 'Unknown Procedure' WHERE procedure_name IS NULL"
    )
    # Now make it not nullable
    op.alter_column("procedures", "procedure_name", nullable=False)
    # Add facility column
    op.add_column("procedures", sa.Column("facility", sa.String(), nullable=True))
    # Drop the old name column
    op.drop_column("procedures", "name")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Reverse procedures table changes
    op.add_column(
        "procedures",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    # Copy data back from procedure_name to name
    op.execute(
        "UPDATE procedures SET name = procedure_name WHERE procedure_name IS NOT NULL"
    )
    op.alter_column("procedures", "name", nullable=False)
    op.drop_column("procedures", "facility")
    op.drop_column("procedures", "procedure_name")

    # Reverse lab_results changes
    op.drop_column("lab_results", "facility")
    op.drop_column("lab_results", "test_type")

    # Reverse conditions table changes
    op.add_column(
        "conditions",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    # Copy data back from condition_name to name
    op.execute(
        "UPDATE conditions SET name = condition_name WHERE condition_name IS NOT NULL"
    )
    op.drop_column("conditions", "condition_name")
    # ### end Alembic commands ###
