name: Medical Records Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/medical-records

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}        
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      if: github.event_name == 'pull_request'
      run: |
        docker build -f ./docker/Dockerfile -t test-image .
        # Basic smoke test - check if container starts and health check passes
        docker run -d --name test-container -p 8000:8000 \
          -e SKIP_MIGRATIONS=true \
          -e SEQUENCE_CHECK_ON_STARTUP=false \
          -e DATABASE_URL="" \
          test-image        sleep 30
        echo "Checking if container is running..."
        docker ps -a
        echo "Checking container logs..."
        docker logs test-container
        echo "Testing health endpoint..."
        curl -v http://localhost:8000/health || echo "Health check failed"
        echo "Testing if port is accessible..."
        curl -v http://localhost:8000/ || echo "Root endpoint failed"
        echo "Stopping container..."
        docker stop test-container
        docker rm test-container
